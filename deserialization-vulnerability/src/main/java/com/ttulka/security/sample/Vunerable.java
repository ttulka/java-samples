package com.ttulka.security.sample;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Method;

public class Vunerable implements Serializable {

    private static final long serialVersionUID = 1L;

    private Object property;

    private transient String description;

    private void writeObject(ObjectOutputStream oos) throws IOException {
        // nothing special here
        oos.defaultWriteObject();
    }

    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
        ois.defaultReadObject();
        // doing some reflection here
        try {
            Method method = this.property.getClass().getMethod("toString", new Class[]{});
            this.description = (String) method.invoke(this.property, null);

        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    @Override
    public String toString() {
        return this.description;
    }

    public Object getProperty() {
        return this.property;
    }

    public void setProperty(Object property) {
        this.property = property;
    }
}
