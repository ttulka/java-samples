package com.ttulka.security.sample;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Method;
import java.util.Locale;

public class Vulnerable implements Serializable {

    private static final long serialVersionUID = 1L;

    private Object object;
    private String property;

    private transient String description;

    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
        ois.defaultReadObject();
        // doing some reflection here
        try {
            Method method = object.getClass().getMethod("get" + capitalize(property), new Class[]{});
            description = method.invoke(object, null).toString();

        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    private void writeObject(ObjectOutputStream oos) throws IOException {
        // nothing special here
        oos.defaultWriteObject();
    }

    String capitalize(String s) {
        return s != null && s.length() != 0 ? s.substring(0, 1).toUpperCase(Locale.ENGLISH) + s.substring(1) : s;
    }

    @Override
    public String toString() {
        return description;
    }

    public void setProperty(String property) {
        this.property = property;
    }

    public void setObject(Object object) {
        this.object = object;
    }
}
